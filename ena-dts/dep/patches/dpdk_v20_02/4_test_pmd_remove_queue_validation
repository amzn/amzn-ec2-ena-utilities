Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
SPDX-License-Identifier: MIT-0

diff --git a/app/test-pmd/testpmd.c b/app/test-pmd/testpmd.c
index 02ed0752b8..7d803649bf 100644
--- a/app/test-pmd/testpmd.c
+++ b/app/test-pmd/testpmd.c
@@ -1139,20 +1139,8 @@ get_allowed_max_nb_txq(portid_t *pid)
  * if valid, return 0, else return -1
  */
 int
-check_nb_txq(queueid_t txq)
+check_nb_txq(__rte_unused queueid_t txq)
 {
-	queueid_t allowed_max_txq;
-	portid_t pid = 0;
-
-	allowed_max_txq = get_allowed_max_nb_txq(&pid);
-	if (txq > allowed_max_txq) {
-		printf("Fail: input txq (%u) can't be greater "
-		       "than max_tx_queues (%u) of port %u\n",
-		       txq,
-		       allowed_max_txq,
-		       pid);
-		return -1;
-	}
 	return 0;
 }
 
@@ -1433,18 +1421,6 @@ init_fwd_streams(void)
 	/* set socket id according to numa or not */
 	RTE_ETH_FOREACH_DEV(pid) {
 		port = &ports[pid];
-		if (nb_rxq > port->dev_info.max_rx_queues) {
-			printf("Fail: nb_rxq(%d) is greater than "
-				"max_rx_queues(%d)\n", nb_rxq,
-				port->dev_info.max_rx_queues);
-			return -1;
-		}
-		if (nb_txq > port->dev_info.max_tx_queues) {
-			printf("Fail: nb_txq(%d) is greater than "
-				"max_tx_queues(%d)\n", nb_txq,
-				port->dev_info.max_tx_queues);
-			return -1;
-		}
 		if (numa_support) {
 			if (port_numa[pid] != NUMA_NO_CONFIG)
 				port->socket_id = port_numa[pid];
-- 
2.25.1

